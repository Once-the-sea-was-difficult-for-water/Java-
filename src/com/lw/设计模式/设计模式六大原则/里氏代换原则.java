package com.lw.设计模式.设计模式六大原则;

public class 里氏代换原则 {
    //概念
    final String concept = "里氏代换原则(Liskov Substitution Principle LSP)面向对象设计的基本原则之一。 " +
            "里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。" +
            " LSP是继承复用的基石，只有当衍生类可以替换掉基类，软件单位的功能不受到影响时，基类才能真正被复用，" +
            "而衍生类也能够在基类的基础上增加新的行为。里氏代换原则是对“开-闭”原则的补充。实现“开-闭”原则的关键步骤就是抽象化。" +
            "而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。(源自百度百科)";
    //里氏代换原则优点
    final String advantage = "需求变化时，只须继承，而别的东西不会改变。" +
            "由于里氏代换原则才使得开放封闭成为可能。这样使得子类在父类无需修改的话就可以扩展。";
}
