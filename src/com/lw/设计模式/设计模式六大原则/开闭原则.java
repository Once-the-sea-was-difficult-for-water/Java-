package com.lw.设计模式.设计模式六大原则;

public class 开闭原则 {
    //概念
    final String concept = "一个软件实体如类、模块和函数应该对扩展开放，对修改关闭。" +
            "模块应尽量在不修改原（是“原”，指原来的代码）代码的情况下进行扩展。\n";
    //模拟场景
    final String simulation = "在软件的生命周期内，因为变化、升级和维护等原因需要对软件原有代码进行修改时，可能会给旧代码中引入错误，" +
            "也可能会使我们不得不对整个功能进行重构，并且需要原有代码经过重新测试。";
    //解决方案
    final String solution = "当软件需要变化时，尽量通过扩展软件实体的行为来实现变化，而不是通过修改已有的代码来实现变化。";
    //注意事项
    final String one = "通过接口或者抽象类约束扩展，对扩展进行边界限定，不允许出现在接口或抽象类中不存在的public方法";
    final String two = "参数类型、引用对象尽量使用接口或者抽象类，而不是实现类";
    final String three = "抽象层尽量保持稳定，一旦确定即不允许修改";
    //开闭原则的优点
    final String advantage = "可复用性、可维护性";
}
